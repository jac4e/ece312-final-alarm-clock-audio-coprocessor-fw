# Python script to pack a .wav file a .c file as a byte array
# Usage: packwav.py <input.wav> (output.c)

import sys
import wave

if len(sys.argv) < 2:
    print("Usage: packwav.py <input.wav> (output.c)")
    sys.exit(1)
    
input = sys.argv[1]
output = sys.argv[2] if len(sys.argv) > 2 else  input.split(".")[0] + ".c"

print("Input: " + input)
print("Output: " + output)

with wave.open(input, "rb") as f:
    print("Channels: " + str(f.getnchannels()))
    print("Sample width: " + str(f.getsampwidth()))
    print("Frame rate: " + str(f.getframerate()))
    print("Number of frames: " + str(f.getnframes()))
    print("")
    
    if f.getsampwidth() != 1:
        print("Only 8-bit samples are supported")
        sys.exit(1)
    
    if f.getcomptype() != "NONE":
        print("Only uncompressed files are supported")
        sys.exit(1)
    
    if f.getnframes() > 80*1024:
        print("Only files with less than 80 kB are supported")
        sys.exit(1)

    print("Packing " + str(f.getnframes()) + " frames")

    with open(output, "w") as out:
        out.write("// Generated by packwav.py\n")
        out.write("#include <stdint.h>\n")
        out.write('#include "tracks.h"\n')
        out.write("\n")
        out.write(f"const uint8_t {output.split('.')[0]}_data[{f.getnframes()}] =" + "{\n")
        
        for i in range(f.getnframes()):
            if i % 8 == 0:
                out.write("  ")

            sample = f.readframes(1)
            sample = int.from_bytes(sample, byteorder="little", signed=False)
            out.write(str(sample) + ", ")

            if i % 8 == 7:
                out.write("\n")

        out.write("};\n")
        out.write(f"track_t {output.split('.')[0]} =" + "{\n")
        out.write(f"  .rate = {f.getframerate()},\n")
        out.write(f"  .channels = {f.getnchannels()},\n")
        out.write(f"  .length = {f.getnframes()},\n")
        out.write(f"  .data = {output.split('.')[0]}_data\n")
        out.write("};\n")
